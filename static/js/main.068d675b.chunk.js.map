{"version":3,"sources":["components/elements/loadMoreBtn/loadMoreBtn.js","components/elements/issuesList/issuesList.js","components/elements/notificationNav/Notificaton.js","actions/actionTypes.js","App.js","actions/index.js","sagas/issueSaga.js","sagas/rootSaga.js","reducers/issueReducer.js","reducers/index.js","index.js"],"names":["LoadMoreBtn","props","className","onClick","text","IssuesList","state","issues","isLoading","error","currentIssues","activeIssue","loadMore","bind","onClickHighlight","issueID","this","setState","issue","find","item","id","onAddIssue","Id","Title","title","prev","fetch","then","response","ok","json","Error","data","catch","message","slice","map","objectID","length","Component","Notification","useState","show","setShow","class","listIssue","ADD_ISSUE","App","notification","highlighted","connect","dispatch","type","addIssueAction","addIssue","watchAddIssue","console","log","takeEvery","rootSaga","all","issueReducers","action","Array","isArray","push","myReducer","combineReducers","issueReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","ReactDOM","render","document","querySelector","run"],"mappings":"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","file":"static/js/main.068d675b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./loadMoreBtn.css\";\r\n\r\nconst LoadMoreBtn = (props) => {\r\n  return (\r\n    <div className=\"loadMoreBtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React, { Component } from \"react\";\r\nimport LoadMoreBtn from \"../loadMoreBtn/loadMoreBtn\";\r\nimport \"./issuesList.css\";\r\n\r\nconst API = \"https://api.github.com/repos/rails/rails/issues?page=1\";\r\n\r\nclass IssuesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      issues: [],\r\n      isLoading: false,\r\n      error: null,\r\n      currentIssues: 5,\r\n      activeIssue: null,\r\n    };\r\n    this.loadMore = this.loadMore.bind(this);\r\n    this.onClickHighlight = this.onClickHighlight.bind(this);\r\n  }\r\n\r\n  onClickHighlight(issueID) {\r\n    if (issueID === this.state.activeIssue) {\r\n      this.setState({ activeIssue: null });\r\n    } else {\r\n      const issue = this.state.issues.find((item) => item.id === issueID);\r\n      this.props.onAddIssue({\r\n        Id: issue.id,\r\n        Title: issue.title,\r\n      });\r\n      this.setState({ activeIssue: issueID });\r\n    }\r\n  }\r\n\r\n  loadMore() {\r\n    this.setState((prev) => {\r\n      return { currentIssues: prev.currentIssues + 5 };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Something went wrong...\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        this.setState({ issues: data, isLoading: false });\r\n      })\r\n      .catch((error) => this.setState({ error, isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { issues, isLoading, error } = this.state;\r\n\r\n    if (error) {\r\n      return <p>{error.message}</p>;\r\n    }\r\n\r\n    if (isLoading) {\r\n      return <p>Loading ...</p>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {issues.slice(0, this.state.currentIssues).map((issues) => (\r\n            <li\r\n              key={issues.objectID}\r\n              className={`segmentsList${\r\n                this.state.activeIssue === issues.id ? \"Selected\" : \"\"\r\n              }`}\r\n              onClick={() => {\r\n                this.onClickHighlight(issues.id);\r\n              }}\r\n            >\r\n              <p>ID: {issues.id} </p>\r\n              <p>Title: {issues.title}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {this.state.currentIssues <= this.state.issues.length && (\r\n          <LoadMoreBtn text=\"Next\" onClick={this.loadMore} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IssuesList;\r\n","import React, { useState } from \"react\";\r\nimport \"./notification.css\";\r\n\r\nconst Notification = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <div className=\"notification\">\r\n      <div className=\"notification-header\">\r\n        <h2>Github Issues</h2>\r\n        <div className=\"notification-button\" onClick={() => setShow(!show)}>\r\n          <i class=\"fas fa-bell fa-3x\"></i>\r\n          {props.listIssue.length > 0 && (\r\n            <span className=\"notification-count\">{props.listIssue.length}</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={!show && \"hidden\"}>\r\n        <div className=\"show\">\r\n          {props.listIssue.map((item) => (\r\n            <ul>\r\n              <li>{item.Id}: {item.Title}</li>\r\n            </ul>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","export const ADD_ISSUE = 'ADD_ISSUE';","import React, { Component } from \"react\";\nimport IssuesList from \"./components/elements/issuesList/issuesList\";\nimport Notification from \"./components/elements/notificationNav/Notificaton\";\n\nimport { connect } from \"react-redux\";\nimport { addIssueAction } from \"./actions\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <Notification\n            onClick={this.notification}\n            listIssue={this.props.highlighted}\n          />\n        </div>\n        <div>\n          <h1>Github Issues Lists:</h1>\n          <IssuesList onAddIssue={(issue) => this.props.onAddIssue(issue)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    highlighted: state.issue ? state.issue.highlighted : [],\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddIssue: (issue) => {\n      dispatch(addIssueAction(issue));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","\r\nimport { ADD_ISSUE } from './actionTypes';\r\n\r\n// create Action\r\nexport const addIssueAction = (issue) => {\r\n    return {\r\n        type: ADD_ISSUE,\r\n        issue: issue\r\n    }\r\n};","import { ADD_ISSUE } from '../actions/actionTypes';\r\nimport { takeEvery } from 'redux-saga/effects';\r\n\r\nfunction* addIssue(issue) {\r\n  yield console.log('this is addIssue', 1);\r\n}\r\n\r\nexport function* watchAddIssue() {\r\n  yield takeEvery(ADD_ISSUE, addIssue);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { watchAddIssue } from \"./issueSaga\";\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchAddIssue()\r\n  ]);\r\n}\r\n\r\n\r\n","import { ADD_ISSUE } from \"../actions/actionTypes\";\r\n\r\nconst issueReducers = (state = [], action) => {\r\n  console.log(state, action);\r\n  switch (action.type) {\r\n    case ADD_ISSUE:\r\n      let highlighted = [];\r\n      if (Array.isArray(state.highlighted))\r\n        highlighted = [...state.highlighted];\r\n        highlighted.push(action.issue);\r\n      return { ...state, highlighted};\r\n\r\n    default:\r\n      return { highlighted: [] };\r\n  }\r\n};\r\n\r\nexport default issueReducers;\r\n","import { combineReducers } from \"redux\";\r\nimport issueReducer from \"./issueReducer\";\r\n\r\nconst myReducer = combineReducers({\r\n    issue: issueReducer,\r\n});\r\n\r\nexport default myReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport rootSaga from \"./sagas/rootSaga\";\n//redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport logger from \"redux-logger\";\nimport myReducer from \"./reducers\";\n//Redux Saga\nimport createSagaMiddleware from \"redux-saga\";\n// Middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nvar store = createStore(myReducer, applyMiddleware(sagaMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n\nsagaMiddleware.run(rootSaga);\n"],"sourceRoot":""}